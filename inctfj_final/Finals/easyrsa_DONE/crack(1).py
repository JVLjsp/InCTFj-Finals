#RUN IN PYTHON 3
from Crypto.Util.number import *
from Crypto.PublicKey import RSA
ct=2685345257616392439006001379061194313792316233899367770809934116528812346963758153122944254072562413345699020652828607637472304288949130458843940089027825177771390296145282317723204509647735943895713278560261403700349541021625768913346485178529023501392694858810407468311822000927200501535918707295965430776001712010083648746498073003579642389359105624086050966957106671177159647393544838814921009108883982186128764215784135937559104327092446770782004048684624869987438875440928789260691576404213897743379750818191550231432815326091004703747400367354520304965579056276929895723051945200119737434889960860195090619412
n1=19402643768027967294480695361037227649637514561280461352708420192197328993512710852087871986349184383442031544945263966477446685587168025154775060178782897097993949800845903218890975275725416699258462920097986424936088541112790958875211336188249107280753661467619511079649070248659536282267267928669265252935184448638997877593781930103866416949585686541509642494048554242004100863315220430074997145531929128200885758274037875349539018669336263469803277281048657198114844413236754680549874472753528866434686048799833381542018876362229842605213500869709361657000044182573308825550237999139442040422107931857506897810951
n2=19402643768027967294480695361037227649637514561280461352708420192197328993512710852087871986349184383442031544945263966477446685587168025154775060178782897097993949800845903218890975275725416699258462920097986424936088541112790958875211336188249107280753661467619511079649070248659536282267267928669265252935757418867172314593546678104100129027339256068940987412816779744339994971665109555680401467324487397541852486805770300895063315083965445098467966738905392320963293379345531703349669197397492241574949069875012089172754014231783160960425531160246267389657034543342990940680603153790486530477470655757947009682859
e=65537
'''
n2 = (p+2)*(q+2)
n2 = p*q + 2(p+q) + 4
n2=n1+ 2(p+q)+4
s=p+q=(n2-n1-4)/2
s=(n2-n1-4)/2
'''
s=286485114087218499882374000116856038876784763715672459384112751167947054174944562802702160896279134670483364265866212772762148207314590814332344728928367561424224483054388511399897362321981687570131510537589353815367568934776659177606015145268452866328495180384841057565182577325522245027681361950220055935952
phin1=n1-s+1
phin2=n1+s+1
d1 = inverse(e, phin1)
d2 = inverse(e, phin2)
rsa1 = RSA.construct((n1, e, d1))
rsa2 = RSA.construct((n2, e, d2))
c=rsa2.decrypt(ct)
c = rsa1.decrypt(c)
print(long_to_bytes(c))
